//*Ballast
	// param  { 
	// 	param_ballast {
	// 			type: bool;
	// 			name: string(STR_PARAM_BALLAST);
	// 			desc: string(STR_PARAM_BALLAST_DESC);
	// 			}
	// 	}
//*Currents
	param { 
		param_current {
				type: bool;
				name: string(STR_PARAM_CURRENT);
				desc: string(STR_PARAM_CURRENT_DESC);
				}
		}
//*Basecosts
  param { 
    param_cost {
      type: int;
      name: string(STR_COST);
      desc: string(STR_COST);
      min_value: 0;
      max_value: 4;
      def_value: 2;
      names: {
          0: string(STR_COST_1);
          1: string(STR_COST_2);
          2: string(STR_COST_3);
          3: string(STR_COST_4);
          4: string(STR_COST_5);
        };
      }
  }
//*Wire colour
param { 
		param_wire {
				type: int;
				name: string(STR_PARAM_WIRE);
				desc: string(STR_PARAM_WIRE_DESC);
				min_value: 0;
				max_value: 1;
				def_value: 0;
				names: {
									0: string(STR_PARAM_WIRE_1);
									1: string(STR_PARAM_WIRE_2);
						};
				}
		}
//*Catenary posts
  //3-6
	// param 3 { 
	// 	param_poles_1 {
	// 			type: int;
	// 			name: string(STR_PARAM_POLES, string(STR_NARROW));
	// 			desc: string(STR_PARAM_POLES_DESC);
	// 			min_value: 0;
	// 			max_value: 1;
	// 			def_value: 0;
	// 			names: {
  //         0: string(STR_PARAM_WIRE_1);
  //         1: string(STR_PARAM_WIRE_2);
  //       };
	// 			}
	// 	}
//*Narrow gauge
  param { 
		param_tracks_narrow {
				type: int;
				name: string(STR_PARAM_TRACKS_1);
				desc: string(STR_PARAM_TRACKS_1);
				min_value: 0;
				max_value: 3;
				def_value: 3;
				names: {
                  0: string(STR_DISABLED);
									1: string(STR_PARAM_TRACKS_1_1);
									2: string(STR_PARAM_TRACKS_1_2);
									3: string(STR_PARAM_TRACKS_1_3);
						};
				}
		}
//*Standard gauge
  param { 
		param_tracks_scotch {
				type: bool;
				name: string(STR_PARAM_TRACKS_1);
				desc: string(STR_PARAM_TRACKS_1);
        def_value: 1;
				}
		}
  param { 
		param_tracks_standard {
				type: int;
				name: string(STR_PARAM_TRACKS_3);
				desc: string(STR_PARAM_TRACKS_3);
				min_value: 0;
				max_value: 3;
				def_value: 2;
				names: {
									0: string(STR_DISABLED);
									1: string(STR_PARAM_TRACKS_3_1);
									2: string(STR_PARAM_TRACKS_3_2);
									3: string(STR_PARAM_TRACKS_3_3);
						};
				}
		}
  param { 
		param_tracks_metro {
				type: bool;
				name: string(STR_PARAM_TRACKS_4);
				desc: string(STR_PARAM_TRACKS_4);
				def_value: 1;
        }
		}
  param { 
		param_tracks_linear {
				type: bool;
				name: string(STR_PARAM_TRACKS_5);
				desc: string(STR_PARAM_TRACKS_5);
				def_value: 1;
        }
		}
  param { 
		param_tracks_shinkansen {
				type: bool;
				name: string(STR_PARAM_TRACKS_6);
				desc: string(STR_PARAM_TRACKS_6);
				def_value: 1;
        }
		}
  // param 13 { 
	// 	param_tracks_dualGauge {
	// 			type: bool;
	// 			name: string(STR_PARAM_TRACKS_7);
	// 			desc: string(STR_PARAM_TRACKS_7);
	// 			def_value: 1;
  //       }
	// 	}
  // param 14 { 
	// 	param_tracks_maglev {
	// 			type: bool;
	// 			name: string(STR_PARAM_TRACKS_8);
	// 			desc: string(STR_PARAM_TRACKS_8);
	// 			def_value: 1;
  //       }
	// 	}
  param 15 { 
		param_tracks_guideway {
				type: bool;
				name: string(STR_PARAM_TRACKS_9);
				desc: string(STR_PARAM_TRACKS_9);
				def_value: 1;
        }
		}
  param 16 { 
		param_tracks_industrial {
				type: int;
				name: string(STR_PARAM_TRACKS_10);
				desc: string(STR_PARAM_TRACKS_10);
				min_value: 0;
				max_value: 2;
				def_value: 0;
				names: {
									0: string(STR_PARAM_TRACKS_10_1);
									1: string(STR_PARAM_TRACKS_10_2);
									2: string(STR_PARAM_TRACKS_10_3);
						};
				}
  }
  param { 
		param_tracks_deco_ballast {
				type: bool;
				name: string(STR_PARAM_TRACKS_DECO_1);
				desc: string(STR_PARAM_TRACKS_DECO_1);
        def_value: 1;
				}
		}
  param { 
		param_tracks_deco_chips_1 {
				type: bool;
				name: string(STR_PARAM_TRACKS_DECO_2);
				desc: string(STR_PARAM_TRACKS_DECO_2);
        def_value: 1;
				}
		}
  param { 
		param_tracks_deco_chips_2 {
				type: bool;
				name: string(STR_PARAM_TRACKS_DECO_3);
				desc: string(STR_PARAM_TRACKS_DECO_3);
        def_value: 1;
				}
		}
  param { 
		param_tracks_deco_chips_3 {
				type: bool;
				name: string(STR_PARAM_TRACKS_DECO_4);
				desc: string(STR_PARAM_TRACKS_DECO_4);
        def_value: 1;
				}
		}
  param { 
		param_tracks_deco_isr {
				type: bool;
				name: string(STR_PARAM_TRACKS_DECO_5);
				desc: string(STR_PARAM_TRACKS_DECO_5);
        def_value: 1;
				}
		}
  param { 
		param_tracks_deco_concrete {
				type: bool;
				name: string(STR_PARAM_TRACKS_DECO_6);
				desc: string(STR_PARAM_TRACKS_DECO_6);
        def_value: 1;
				}
		}
  param { 
		param_tracks_universal_style {
				type: int;
				name: string(STR_UNIVERSAL_GRASS_STYLE);
				desc: string(STR_UNIVERSAL_GRASS_STYLE);
				min_value: 0;
				max_value: 1;
				def_value: 0;
				names: {
									0: string(STR_UNIVERSAL_GRASS_STYLE_1);
									1: string(STR_UNIVERSAL_GRASS_STYLE_2);
						};
				}
		}
//*Fences Styling
  param { 
		param_fences_1 {
				type: int;
				name: string(STR_PARAM_FENCES, string(STR_PARAM_TYPE_1, string(STR_PARAM_TRACKS_1)));
				desc: string(STR_PARAM_FENCES, string(STR_PARAM_TYPE_1, string(STR_PARAM_TRACKS_1)));
        min_value: 0;
				max_value: 4;
				def_value: 0;
				names: {
									0: string(STR_PARAM_FENCE_0);
									1: string(STR_PARAM_FENCE_1);
									2: string(STR_PARAM_FENCE_2);
									3: string(STR_PARAM_FENCE_3);
									4: string(STR_PARAM_FENCE_4);
						};
				}
		}
  param { 
		param_fences_2 {
				type: int;
				name: string(STR_PARAM_FENCES, string(STR_PARAM_TYPE_2, string(STR_PARAM_TRACKS_1)));
				desc: string(STR_PARAM_FENCES, string(STR_PARAM_TYPE_2, string(STR_PARAM_TRACKS_1)));
        min_value: 0;
				max_value: 4;
				def_value: 1;
				names: {
									0: string(STR_PARAM_FENCE_0);
									1: string(STR_PARAM_FENCE_1);
									2: string(STR_PARAM_FENCE_2);
									3: string(STR_PARAM_FENCE_3);
									4: string(STR_PARAM_FENCE_4);
						};
				}
		}
  param { 
		param_fences_3 {
				type: int;
				name: string(STR_PARAM_FENCES, string(STR_PARAM_TYPE_3, string(STR_PARAM_TRACKS_1)));
				desc: string(STR_PARAM_FENCES, string(STR_PARAM_TYPE_3, string(STR_PARAM_TRACKS_1)));
        min_value: 0;
				max_value: 4;
				def_value: 2;
				names: {
									0: string(STR_PARAM_FENCE_0);
									1: string(STR_PARAM_FENCE_1);
									2: string(STR_PARAM_FENCE_2);
									3: string(STR_PARAM_FENCE_3);
									4: string(STR_PARAM_FENCE_4);
						};
				}
		}
  param { 
		param_fences_4 {
				type: int;
				name: string(STR_PARAM_FENCES, string(STR_PARAM_TYPE_1, string(STR_PARAM_TRACKS_3)));
				desc: string(STR_PARAM_FENCES, string(STR_PARAM_TYPE_1, string(STR_PARAM_TRACKS_3)));
        min_value: 0;
				max_value: 4;
				def_value: 0;
				names: {
									0: string(STR_PARAM_FENCE_0);
									1: string(STR_PARAM_FENCE_1);
									2: string(STR_PARAM_FENCE_2);
									3: string(STR_PARAM_FENCE_3);
									4: string(STR_PARAM_FENCE_4);
						};
				}
		}
  param { 
		param_fences_5 {
				type: int;
				name: string(STR_PARAM_FENCES, string(STR_PARAM_TYPE_2, string(STR_PARAM_TRACKS_3)));
				desc: string(STR_PARAM_FENCES, string(STR_PARAM_TYPE_2, string(STR_PARAM_TRACKS_3)));
        min_value: 0;
				max_value: 4;
				def_value: 1;
				names: {
									0: string(STR_PARAM_FENCE_0);
									1: string(STR_PARAM_FENCE_1);
									2: string(STR_PARAM_FENCE_2);
									3: string(STR_PARAM_FENCE_3);
									4: string(STR_PARAM_FENCE_4);
						};
				}
		}
  param { 
		param_fences_6 {
				type: int;
				name: string(STR_PARAM_FENCES, string(STR_PARAM_TYPE_3, string(STR_PARAM_TRACKS_3)));
				desc: string(STR_PARAM_FENCES, string(STR_PARAM_TYPE_3, string(STR_PARAM_TRACKS_3)));
        min_value: 0;
				max_value: 4;
				def_value: 2;
				names: {
									0: string(STR_PARAM_FENCE_0);
									1: string(STR_PARAM_FENCE_1);
									2: string(STR_PARAM_FENCE_2);
									3: string(STR_PARAM_FENCE_3);
									4: string(STR_PARAM_FENCE_4);
						};
				}
		}

